name: "build container image"
runs:
  using: "composite"
  steps:
    - name: Setup buildkit
      uses: docker/setup-buildx-action@v1
      id: buildx
      with:
        install: true
    - name: Build ${{ env.container_image_name }}:${{ env.container_version }}
      run: |
        docker build -t ${{ env.container_image_name }}:${{ env.container_version }} \
          --build-arg BASE_IMG_CUDA_VERSION=${{ env.base_img_cuda_version }} \
          --build-arg BASE_IMG_OS_VERSION=${{ env.base_img_os_version }} \
          --build-arg ANACONDA_VERSION=${{ env.anaconda }} \
          --build-arg OPENCV_VERSION=${{ env.opencv }} \
          --build-arg TF_GPU_VERSION=${{ env.tf_gpu }} \
          --build-arg KERAS_VERSION=${{ env.keras }} \
          --build-arg TORCH_VERSION=${{ env.torch }} \
          --build-arg TORCH_VISION_VERSION=${{ env.torch_vision }} \
          --build-arg TORCH_SUMMARY_VERSION=${{ env.torch_summary }} \
          --build-arg CUPY_CUDA_VERSION=${{ env.cupy_cuda }} \
          --build-arg CUDA_VERSION_FOR_CUPY=${{ env.cuda_version_for_cupy }} \
          --build-arg JUPYTER_VERSION=${{ env.jupyter }} \
          --build-arg NODEJS_VERSION=${{ env.nodejs }} \
          --build-arg CODE_SERVER_VERSION=${{ env.code_server }} \
          --build-arg RCLONE_VERSION=${{ env.rclone }} \
          --build-arg TORCH_FILE=${{ env.torch_file }} \
          --build-arg TORCH_VISION_FILE=${{ env.torch_vision_file }} \
          --build-arg TF_TYPE=${{ env.tf_type }} \
          --build-arg PYENV_RELEASE_VERSION=${{ env.pyenv_release_version }} \
          --build-arg IMAGE_STATUS=${{ env.image_status }} .
      shell: bash
