# main scripts
.kaniko_executor: &kaniko_executor
  - mkdir -p /kaniko/.docker
  - echo "{\"auths\":{\"$CI_REGISTRY\":{\"username\":\"$CI_REGISTRY_USER\",\"password\":\"$CI_REGISTRY_PASSWORD\"}}}" > /kaniko/.docker/config.json
  - >
    /kaniko/executor \
      --snapshotMode redo \
      --context $CI_PROJECT_DIR \
      --dockerfile Dockerfile \
      --destination $CONTAINER_IMAGE_NAME:$CONTAINER_VERSION \
      --build-arg BASE_IMG_CUDA_VERSION=$BASE_IMG_CUDA_VERSION \
      --build-arg ANACONDA_VERSION=$ANACONDA \
      --build-arg OPENCV_VERSION=$OPENCV \
      --build-arg TF_GPU_VERSION=$TF_GPU \
      --build-arg KERAS_VERSION=$KERAS \
      --build-arg TORCH_VERSION=$TORCH \
      --build-arg TORCH_VISION_VERSION=$TORCH_VISION \
      --build-arg TORCH_SUMMARY_VERSION=$TORCH_SUMMARY \
      --build-arg CUPY_CUDA_VERSION=$CUPY_CUDA \
      --build-arg CUDA_VERSION_FOR_CUPY=$CUDA_VERSION_FOR_CUPY \
      --build-arg JUPYTER_VERSION=$JUPYTER \
      --build-arg NODEJS_VERSION=$NODEJS \
      --build-arg CODE_SERVER_VERSION=$CODE_SERVER \
      --build-arg TORCH_FILE=$TORCH_FILE \
      --build-arg TORCH_VISION_FILE=$TORCH_VISION_FILE \
      --build-arg TF_TYPE=$TF_TYPE \
      --build-arg PYENV_RELEASE_VERSION=$PYENV_RELEASE_VERSION

.unittest_script: &unittest_script
  - >
    docker run -u 1000 --rm \
      -v $PWD/tests:/home/user/tests \
      -v $PWD/Makefile:/home/user/Makefile \
      -e BASE_IMG_CUDA_VERSION=$BASE_IMG_CUDA_VERSION \
      -e ANACONDA_VERSION=$ANACONDA \
      -e OPENCV_VERSION=$OPENCV \
      -e TF_GPU_VERSION=$TF_GPU \
      -e KERAS_VERSION=$KERAS \
      -e TORCH_VERSION=$TORCH \
      -e TORCH_VISION_VERSION=$TORCH_VISION \
      -e TORCH_SUMMARY_VERSION=$TORCH_SUMMARY \
      -e CUPY_CUDA_VERSION=$CUPY_CUDA \
      -e CUDA_VERSION_FOR_CUPY=$CUDA_VERSION_FOR_CUPY \
      -e JUPYTER_VERSION=$JUPYTER \
      -e NODEJS_VERSION=$NODEJS \
      -e CODE_SERVER_VERSION=$CODE_SERVER \
      -e TORCH_FILE=$TORCH_FILE \
      -e TORCH_VISION_FILE=$TORCH_VISION_FILE \
      -e TF_TYPE=$TF_TYPE \
      -e PYENV_RELEASE_VERSION=$PYENV_RELEASE_VERSION \
      -e CONTAINER_VERSION=$CONTAINER_VERSION \
      $CONTAINER_IMAGE_NAME:$CONTAINER_VERSION \
      make unittest

# before scripts
.show_version_before: &show_version_before
  - echo CONTAINER_VERSION $CONTAINER_VERSION
  - echo BASE_IMG_CUDA_VERSION $BASE_IMG_CUDA_VERSION
  - echo ANACONDA_VERSION $ANACONDA
  - echo OPENCV_VERSION $OPENCV
  - echo TF_GPU_VERSION $TF_GPU
  - echo KERAS_VERSION $KERAS
  - echo TORCH_VERSION $TORCH
  - echo TORCH_VISION_VERSION $TORCH_VISION
  - echo TORCH_SUMMARY_VERSION $TORCH_SUMMARY
  - echo CUPY_CUDA_VERSION $CUPY_CUDA
  - echo CUDA_VERSION_FOR_CUPY $CUDA_VERSION_FOR_CUPY
  - echo JUPYTER_VERSION $JUPYTER
  - echo NODEJS_VERSION $NODEJS
  - echo CODE_SERVER_VERSION $CODE_SERVER
  - echo TORCH_FILE $TORCH_FILE
  - echo TORCH_VISION_FILE $TORCH_VISION_FILE
  - echo TF_TYPE $TF_TYPE
  - echo CUDA_VERSION_FOR_CUPY $CUDA_VERSION_FOR_CUPY
  - echo CONTAINER_IMAGE_NAME $CONTAINER_IMAGE_NAME
  - echo PYENV_RELEASE_VERSION $PYENV_RELEASE_VERSION

.all_before: &all_before
  - CUDA_MAJOR=`echo $CONTAINER_VERSION | sed 's/cuda//g' | cut -d. -f1`
  - CUDA_MINOR=`echo $CONTAINER_VERSION | cut -d. -f2 | cut -d- -f1`
  - CUDA_VERSION_FOR_CUPY=$CUDA_MAJOR$CUDA_MINOR
  - >
    if [ -n "`echo $CI_JOB_NAME | grep test`" ];then \
      CONTAINER_IMAGE_NAME="$CI_REGISTRY_IMAGE/test";
    else  
      CONTAINER_IMAGE_NAME="$CI_REGISTRY_IMAGE";
    fi
  - BASE_IMG_CUDA_VERSION=`echo $CONTAINER_VERSION | sed 's/cuda//'`

# pipline template
.image-build:
  stage: docker-build
  image:
    name: gcr.io/kaniko-project/executor:debug-v1.3.0
    entrypoint: [""]
  tags:
    - gitlab-org-docker
  before_script:
    - *all_before
    - *show_version_before
  script:
    - *kaniko_executor
  retry:
    max: 2

.unittest-to-check-versions:
  stage: unittest
  tags:
    - gitlab-org-docker
  image: docker:stable
  services:
    - docker:dind
  before_script:
    - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
    - *all_before
    - *show_version_before
  script:
    - *unittest_script
  artifacts:
    reports:
      cobertura: 'tests/coverage.xml' 
